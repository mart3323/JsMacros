buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven { url "https://maven.fabricmc.net/" }
        maven { url "https://maven.architectury.dev/" }
        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.github.MsRandom:architectury-loom:0.12.0-legacyfg3-SNAPSHOT'
    }
}

plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
}

subprojects {
    apply plugin: "dev.architectury.loom"

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings fileTree(dir: "$rootDir/libs", include: "**.jar")

        // non-mod dependencies:

        implementation "org.graalvm.sdk:graal-sdk:${project.graal_version}"
        implementation "org.graalvm.js:js:${project.graal_version}"
        implementation "org.graalvm.truffle:truffle-api:${project.graal_version}"
        implementation "org.graalvm.regex:regex:${project.graal_version}"
//		implementation "org.graalvm.compiler:compiler:${project.graal_version}"
//		implementation "org.graalvm.compiler:compiler-management:${project.graal_version}"
        implementation 'com.ibm.icu:icu4j:70.1'

        implementation "io.noties:prism4j:${project.prism_version}"

        implementation "com.neovisionaries:nv-websocket-client:2.10"

        implementation "org.javassist:javassist:3.28.0-GA"

        implementation "com.mojang:brigadier:${project.brigadier_version}"

        implementation 'com.google.code.findbugs:jsr305:3.0.2'
    }

    loom {
        setIntermediaryUrl('https://maven.legacyfabric.net/net/fabricmc/intermediary/%1$s/intermediary-%1$s-v2.jar');
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven {
            name "Modmuss50 Repository"
            url 'https://maven.fabricmc.net/'
            metadataSources {
                artifact()
            }
        }
        maven {
            name = "legacy-fabric"
            url = "https://maven.legacyfabric.net"
        }
        maven { url 'https://jitpack.io' }
        maven {
            url "https://maven.terraformersmc.com/releases"
            name "modmenu maven"
        }
        maven { url 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            it.options.release = targetVersion
        }
    }

    java {
        withSourcesJar()
    }
}

task removeDist(type: Delete) {
    delete new File(rootProject.rootDir, "dist")
}

clean.finalizedBy(removeDist)