import org.gradle.internal.jvm.Jvm
import org.apache.tools.ant.filters.ReplaceTokens
import xyz.wagyourtail.tiny2mcp.Tiny2MCP

buildscript {
    repositories {
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.github.wagyourtail:forgegradle:7747de8fe7'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.6-SNAPSHOT'
        classpath files(Jvm.current().toolsJar)
    }
}

subprojects {
    apply plugin: 'net.minecraftforge.gradle.forge'
    apply plugin: 'org.spongepowered.mixin'

    repositories {
        flatDir {
            dirs "$rootProject.rootDir/libs"
        }
    }

    minecraft {
        version = "1.8.9-11.15.1.1722"
        runDir = "run"

        mappings = Tiny2MCP.remap(new File(rootProject.rootDir, "libs"), "1.8.9", "build.202110221052")
    }

    configurations {
        include
        include.transitive = false
    }

    dependencies {
        implementation 'org.spongepowered:mixin:0.7.11-SNAPSHOT'

        // non-mod dependencies:

        implementation "org.graalvm.sdk:graal-sdk:${project.graal_version}"
        implementation "org.graalvm.js:js:${project.graal_version}"
        implementation "org.graalvm.truffle:truffle-api:${project.graal_version}"
        implementation "org.graalvm.regex:regex:${project.graal_version}"
//		implementation "org.graalvm.compiler:compiler:${project.graal_version}"
//		implementation "org.graalvm.compiler:compiler-management:${project.graal_version}"
        implementation 'com.ibm.icu:icu4j:70.1'

        implementation "io.noties:prism4j:${project.prism_version}"

        implementation "com.neovisionaries:nv-websocket-client:2.10"

        implementation "org.javassist:javassist:3.28.0-GA"

        implementation "com.mojang:brigadier:${project.brigadier_version}"

        implementation 'com.google.code.findbugs:jsr305:3.0.2'
        implementation group: 'org.jetbrains', name: 'annotations', version: '16.0.1'
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "maven-publish"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven {
            name "Modmuss50 Repository"
            url 'https://maven.fabricmc.net/'
        }
        maven {
            name = "legacy-fabric"
            url = "https://maven.legacyfabric.net"
        }
        maven { url 'https://jitpack.io' }
        maven { url 'https://repo.spongepowered.org/maven/' }
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            it.options.release = targetVersion
        }
    }
}

task removeDist(type: Delete) {
    delete new File(rootProject.rootDir, "dist")
}

clean.finalizedBy(removeDist)